{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rica_\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Pensamentos\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Input from \"../components/Input\";\nimport SuccessMessage from \"../components/SuccessMessage\";\nimport Textarea from \"../components/Textarea\";\nimport styles from './Register.module.css';\nimport Submit from \"../components/Submit\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [file, setFile] = useState([]);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:9000/thoughts/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      } else {\n        navigate('/', {\n          state: {\n            message: responseData.message\n          }\n        });\n\n        // setError('')\n        // setSuccess(responseData.message)\n        // setTimeout(() => {\n        //   setSuccess('')\n        // }, 1000);\n        // setTitle('')\n        // setDescription('')\n      }\n    } catch (err) {\n      setSuccess('');\n      setError(err.message);\n    }\n  };\n  const onInputChange = e => {\n    setFile(e.target.files[0]);\n    console.log(file);\n  };\n  const refPick = useRef();\n  const pickImage = () => {\n    refPick.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        text: \"Title\",\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        placeholder: \"Enter with a title for the thought!\",\n        onChange: e => setTitle(e.target.value),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        text: \"Description\",\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Enter with a description for the thought!\",\n        onChange: e => setDescription(e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: refPick,\n        style: {\n          display: 'none'\n        },\n        type: \"file\",\n        name: \"image\",\n        accept: `${'.jpg'},${'.png'}`,\n        id: \"image\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {\n        onClick: pickImage,\n        type: \"submit\",\n        value: \"Choose file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"CQchdNWbeo1WknmerlmrfvxLHCM=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","useState","ErrorMessage","Input","SuccessMessage","Textarea","styles","Submit","useNavigate","Register","title","setTitle","description","setDescription","error","setError","success","setSuccess","file","setFile","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","state","err","onInputChange","target","files","console","log","refPick","pickImage","current","click","container","value","display"],"sources":["C:/Users/rica_/OneDrive/Área de Trabalho/Pensamentos/frontend/src/pages/Register.js"],"sourcesContent":["import { useRef, useState } from \"react\"\r\nimport ErrorMessage from \"../components/ErrorMessage\"\r\nimport Input from \"../components/Input\"\r\nimport SuccessMessage from \"../components/SuccessMessage\"\r\nimport Textarea from \"../components/Textarea\"\r\nimport styles from './Register.module.css'\r\nimport Submit from \"../components/Submit\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Register = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [success, setSuccess] = useState('')\r\n  const [file, setFile] = useState([])\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:9000/thoughts/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type' : 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          description,\r\n          \r\n        })\r\n      })\r\n\r\n      const responseData = await response.json()\r\n\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message)\r\n      } else {\r\n        navigate('/', {\r\n          state: {\r\n            message: responseData.message\r\n          }\r\n        })\r\n\r\n        // setError('')\r\n        // setSuccess(responseData.message)\r\n        // setTimeout(() => {\r\n        //   setSuccess('')\r\n        // }, 1000);\r\n        // setTitle('')\r\n        // setDescription('')\r\n      }\r\n    } catch (err) {\r\n      setSuccess('')\r\n      setError(err.message)\r\n    }\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    setFile(e.target.files[0])\r\n    console.log(file)\r\n  }\r\n\r\n  const refPick = useRef()\r\n\r\n  const pickImage = () => {\r\n    refPick.current.click()\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          text='Title'\r\n          type='text'\r\n          name='title'\r\n          id='title'\r\n          placeholder='Enter with a title for the thought!'\r\n          onChange={e => setTitle(e.target.value)}\r\n          value={title}\r\n        />\r\n        <Textarea\r\n          text='Description'\r\n          type='text'\r\n          name='description'\r\n          id='description'\r\n          placeholder='Enter with a description for the thought!'\r\n          onChange={e => setDescription(e.target.value)}\r\n          value={description}\r\n        />\r\n        <input \r\n          ref={refPick}\r\n          style={{display: 'none'}} \r\n          type=\"file\" \r\n          name=\"image\" \r\n          accept={`${'.jpg'},${'.png'}`} \r\n          id=\"image\" \r\n          onChange={onInputChange}\r\n        />\r\n        <Submit onClick={pickImage} type=\"submit\" value=\"Choose file\" />\r\n      </form>\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {success && <SuccessMessage>{success}</SuccessMessage>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}