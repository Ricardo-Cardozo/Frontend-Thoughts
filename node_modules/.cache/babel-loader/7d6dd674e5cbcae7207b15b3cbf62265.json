{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rica_\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Pensamentos\\\\frontend\\\\src\\\\pages\\\\Update.js\",\n  _s = $RefreshSig$();\nimport Input from \"../components/Input\";\nimport Textarea from \"../components/Textarea\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport SuccessMessage from \"../components/SuccessMessage\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from './Update.module.css';\nimport Submit from \"../components/Submit\";\nimport InputImage from \"../components/InputImage\";\n//import ContentEditable from \"../components/ContentEditable\"\nimport EditorPrism from \"../components/EditorPrism\";\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = () => {\n  _s();\n  var _thoughts$thought, _thoughts$thought2, _thoughts$thought3, _thoughts$thought4, _thoughts$thought5;\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [thoughts, setThoughts] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState([]);\n  const [code, setCode] = useState(``);\n  useEffect(() => {\n    async function edit() {\n      var _responseData$thought;\n      const response = await fetch(`https://api-thoughts.onrender.com/thoughts/${id}`);\n      const responseData = await response.json();\n      setThoughts(responseData);\n      setCode((responseData === null || responseData === void 0 ? void 0 : (_responseData$thought = responseData.thought) === null || _responseData$thought === void 0 ? void 0 : _responseData$thought.code) || '');\n    }\n    edit();\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', title);\n      formData.append('description', description);\n      formData.append('image', file);\n      formData.append('code', code);\n      const response = await fetch(`https://api-thoughts.onrender.com/thoughts/edit/${id}`, {\n        method: 'PATCH',\n        body: formData\n        // headers: {\n        //     'Content-Type' : 'multipart/form-data'\n        // },\n        // body: JSON.stringify({\n        //   title,\n        //   description\n        // })\n      });\n\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      } else {\n        setError('');\n        setSuccess(responseData.message);\n        setTimeout(() => {\n          setSuccess('');\n        }, 1000);\n        setTitle('');\n        setDescription('');\n      }\n    } catch (err) {\n      setSuccess('');\n      setError(err.message);\n    }\n  };\n  const onInputChange = e => {\n    setFile(e.target.files[0]);\n    console.log(file.name);\n  };\n  console.log(title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        text: \"Title\",\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        placeholder: (_thoughts$thought = thoughts.thought) === null || _thoughts$thought === void 0 ? void 0 : _thoughts$thought.title,\n        onChange: e => setTitle(e.target.value),\n        value: (_thoughts$thought2 = thoughts.thought) === null || _thoughts$thought2 === void 0 ? void 0 : _thoughts$thought2.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        text: \"Description\",\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: ((_thoughts$thought3 = thoughts.thought) === null || _thoughts$thought3 === void 0 ? void 0 : _thoughts$thought3.description) || '',\n        onChange: e => setDescription(e.target.value),\n        defaultValue: (_thoughts$thought4 = thoughts.thought) === null || _thoughts$thought4 === void 0 ? void 0 : _thoughts$thought4.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditorPrism, {\n        placeholder: \"Example: function EditInput() {}\",\n        value: code,\n        onChange: setCode,\n        highlights: code => highlight(code, languages.js)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputImage, {\n        onChange: onInputChange,\n        type: \"file\",\n        value: \"Choose file\",\n        name: \"image\",\n        accept: \".jpg, .png, .jpeg\",\n        fileName: (_thoughts$thought5 = thoughts.thought) === null || _thoughts$thought5 === void 0 ? void 0 : _thoughts$thought5.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {\n        type: \"submit\",\n        value: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Update, \"jz5NGUfJYmwPMYal7JMsvdPaRj8=\", false, function () {\n  return [useParams];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["Input","Textarea","ErrorMessage","SuccessMessage","useEffect","useState","useParams","styles","Submit","InputImage","EditorPrism","highlight","languages","Update","error","setError","success","setSuccess","thoughts","setThoughts","id","title","setTitle","description","setDescription","file","setFile","code","setCode","edit","response","fetch","responseData","json","thought","handleSubmit","e","preventDefault","formData","FormData","append","method","body","ok","Error","message","setTimeout","err","onInputChange","target","files","console","log","name","container","value","js","image"],"sources":["C:/Users/rica_/OneDrive/Área de Trabalho/Pensamentos/frontend/src/pages/Update.js"],"sourcesContent":["import Input from \"../components/Input\"\r\nimport Textarea from \"../components/Textarea\"\r\nimport ErrorMessage from \"../components/ErrorMessage\"\r\nimport SuccessMessage from \"../components/SuccessMessage\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport styles from './Update.module.css'\r\nimport Submit from \"../components/Submit\"\r\nimport InputImage from \"../components/InputImage\"\r\n//import ContentEditable from \"../components/ContentEditable\"\r\nimport EditorPrism from \"../components/EditorPrism\"\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\n\r\n\r\nconst Update = () => {\r\n  const [error, setError] = useState('')\r\n  const [success, setSuccess] = useState('')\r\n  const [thoughts, setThoughts] = useState([])\r\n  const {id} = useParams()\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [file, setFile] = useState([])\r\n  const [code, setCode] = useState(``)\r\n  \r\n  useEffect(() => {\r\n    async function edit() {\r\n      const response = await fetch(`https://api-thoughts.onrender.com/thoughts/${id}`)\r\n      const responseData = await response.json()\r\n      setThoughts(responseData)\r\n      setCode(responseData?.thought?.code || '')\r\n    }\r\n    edit()\r\n  }, [id])\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append('title', title)\r\n      formData.append('description', description)\r\n      formData.append('image', file)\r\n      formData.append('code', code)\r\n        const response = await fetch(`https://api-thoughts.onrender.com/thoughts/edit/${id}`, {\r\n        method: 'PATCH',\r\n        body: formData,\r\n        // headers: {\r\n        //     'Content-Type' : 'multipart/form-data'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //   title,\r\n        //   description\r\n        // })\r\n      })\r\n\r\n      const responseData = await response.json()\r\n    \r\n      if (!response.ok) {\r\n        throw new Error(responseData.message)\r\n      } else {\r\n        setError('')\r\n        setSuccess(responseData.message)\r\n        setTimeout(() => {\r\n          setSuccess('')\r\n        }, 1000);\r\n        setTitle('')\r\n        setDescription('')\r\n      }\r\n    } catch (err) {\r\n      setSuccess('')\r\n      setError(err.message)\r\n    }\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    setFile(e.target.files[0])\r\n    console.log(file.name)\r\n  }\r\n\r\n  console.log(title)\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Edit</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          text='Title'\r\n          type='text'\r\n          name='title'\r\n          id='title'\r\n          placeholder={thoughts.thought?.title}\r\n          onChange={e => setTitle(e.target.value)}\r\n          value={thoughts.thought?.title}\r\n        />\r\n        <Textarea\r\n          text='Description'\r\n          type='text'\r\n          name='description'\r\n          id='description'\r\n          placeholder={thoughts.thought?.description || ''}\r\n          onChange={e => setDescription(e.target.value)}\r\n          defaultValue={thoughts.thought?.description}\r\n        />\r\n        {/* <ContentEditable\r\n          name='code'\r\n          id='code'\r\n          value={thoughts.thought?.code}\r\n          onChange={e => setCode(e.target.value)}\r\n        /> */}\r\n        <EditorPrism\r\n          placeholder={\"Example: function EditInput() {}\"}\r\n          value={code}\r\n          onChange={setCode}\r\n          highlights={code => highlight(code, languages.js)}\r\n        />\r\n        <InputImage \r\n          onChange={onInputChange} \r\n          type=\"file\" \r\n          value=\"Choose file\" \r\n          name='image'\r\n          accept='.jpg, .png, .jpeg' \r\n          fileName={thoughts.thought?.image}\r\n        />\r\n        <Submit type=\"submit\" value=\"Edit\" />\r\n      </form>\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {success && <SuccessMessage>{success}</SuccessMessage>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Update"],"mappings":"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"},"metadata":{},"sourceType":"module"}